Device
{
  meshfile = quantum_well.msh
  mesh_units = 1e-9

  x-growth-direction = (1,1,-2,2)
  y-growth-direction = (1,-1,0,0)



  Region  nGaN
  {
    material = GaN

    Doping
    {
      density =  1e19
      type = donor
      level = 0.004
    }
  }

  Region well
  {
    material = InGaN
    x=0.2
  }

  Region  barrier
  {
    material = GaN
  }
  
  Region well_q
  {
    material = InGaN
    x=0.2
  }

  Region  barrier_q
  {
    material = GaN
  }
  

  Region  pGaN
  {
    material = GaN

    Doping
    {
      density =  3e19
      type = acceptor
      level = 0.170 
      g = 4 
    }
  }

  Atomistic tb
  {
    reference_region = barrier_q
    regions = (well_q, barrier_q)
    passivation = no
    periodicity = true

    random_alloy = true
    random_generator_seed = 1

    print = xyz
  }

}


Module elasticity 
{

  name = strain
  regions = all

  plot = (Strain)
 
  mesh_deformation = true

  Physics 
  {
    body_force lattice_mismatch 
    {
      reference_material = nGaN
    }
       
  }

  Contact substrate  
  {type = clamp}

}


Module vff
{

 regions = (well_q, barrier_q) 
 atomistic_structure = tb

 plot = (Strain, StrainCells)

 Physics
 {

   keating automatic
   {
     use_four_wz_parameters = true
   }
 }
}





Module  driftdiffusion
{ 
        
  name = dd

  Solver
  {
    solver = linesearch
  }

  # we solve only Poisson equation
  coupling = poisson
  guess_hl_qfermi = 3.0
  
  plot = (Ec, Ev,ElPotential,ElField,Polarization)

  Physics
  {

    band_properties {
      density_of_states bulk_kp {
        strain_simulation = strain 
      }
    }
    polarization piezo {
       strain_simulation = strain
    }
    polarization pyro {  }
  }


  Contact substrate{ voltage = 0V }
  Contact top{ voltage = 3V }
}




Module  efaschroedinger
{
  name = efa
  regions = (well_q, barrier_q)

  x-periodicity = true
  Dirichlet_bc_everywhere = false

  plot = (ProbabilityDensity, EigenEnergy, EnergyLevels)

  num_conduction_eigenvalues = 6
  num_valence_eigenvalues = 12
  poisson_simulation  = dd
  strain_simulation = strain 

  Physics
  { 
    model = 8x8
  }
}
  
 
Module empirical_tb
{
  regions = (well_q, barrier_q)
  name = tb

  atomistic_structure = tb
  Harrison_scaling = true     # set to false if no strain is calculated

  potential_simulation = dd
 
  #plot = (tbstates, MeshStates)

  Solver
  {
   
   # use dynamic_search to improve the solver first guess 
   #dynamic_search = true 


   num_conduction_eigenvalues =  6  
   num_valence_eigenvalues = 12 

   long_tolerance = 1e-4

  }

}



Simulation
{
  temperature = 300
  solve = (strain, vff, dd, efa, tb)   
  resultpath = output_11-22
  searchpath = .
}
